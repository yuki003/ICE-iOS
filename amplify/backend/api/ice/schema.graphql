# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model {
  id: ID!
  userID: String!
  userName: String!
  thumbnailKey: String
  accountType: AccountType!
  hostGroupIDs: [ID]
  belongingGroupIDs: [ID] 
}

enum AccountType {
  GUEST
  HOST
}

type Group @model {
  id: ID!
  groupName: String!
  description: String
  thumbnailKey: String
  hostUserIDs: [String]
  belongingUserIDs: [String]
  taskIDs: [String]
  rewardIDs: [String]
}

type GroupPointsHistory @model {
  id: ID!
  userID: String!
  completedTaskID: [ID]
  receivedRewardID: [ID]
  total: Int!
  pending: Int!
  spent: Int!
  amount: Int!
}

type Tasks @model {
  id: ID!
  createUserID: String!
  receivingUserIDs: [String]
  completedUserIDs: [String]
  taskName: String!
  description: String
  iconName: String!
  frequencyType: FrequencyType!
  condition: [String]
  point: Int!
  groupID: String!
  hasPendingReport: Boolean!
  startDate: AWSDateTime
  endDate: AWSDateTime
}

type TaskReports @model {
  id: ID!
  taskID: String!
  reportUserID: String!
  picture1: String
  picture2: String
  picture3: String
  reports: [String]
  rejectedComment:[String]
  approvedComment: String
  status: ReportStatus
  reportVersion: Int
}

type Rewards @model {
  id: ID!
  createUserID: String!
  rewardName: String!
  description: String
  thumbnailKey: String
  frequencyType: FrequencyType!
  whoGetsPaid: WhoGetsPaid!
  getUserID: [String]
  cost: Int!
  groupID: String!
  startDate: AWSDateTime
  endDate: AWSDateTime
}

enum FrequencyType {
  ONLY_ONCE
  EVERY_DAY
  WEEK_DAY
  HOLIDAY
  ONCE_PER_WEEK
  ONCE_PER_MONTH
  ONCE_PER_YEAR
}

enum WhoGetsPaid {
  ONLY_ONE
  EVERYBODY
  LIMITED
}

enum ReportStatus {
  PENDING
  APPROVED
  REJECTED
}